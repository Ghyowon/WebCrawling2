{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c0bb0e9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 크롤링 라이브러리 임포트\n",
    "from urllib.request import urlopen\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8022d73e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#자동차 정보-쉐보레\n",
    "html = urlopen(\"https://auto.naver.com/company/main.nhn?mnfcoNo=48&importYn=Y\")\n",
    "bsObject = BeautifulSoup(html,\"html.parser\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "19de6f62",
   "metadata": {},
   "outputs": [],
   "source": [
    "productUrlList=[] #자동차 상세 사이트 url\n",
    "productUrl = bsObject.find_all(\"span\",{\"class\":\"thmb\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fc2c81c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(len(productUrl)):\n",
    "    productUrlList.append(\"https://auto.naver.com/\" + productUrl[i].find(\"a\").get(\"href\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cd199561",
   "metadata": {},
   "outputs": [],
   "source": [
    "#자동차 이름\n",
    "productNameList=[] # 자동차 이름 List\n",
    "for i in range(len(productUrlList)):\n",
    "    nameHtml = urlopen(productUrlList[i])\n",
    "    nameBsObject = BeautifulSoup(nameHtml,\"html.parser\")\n",
    "    productName = nameBsObject.find_all(\"div\",{\"class\":\"end_model\"})\n",
    "    productNameList.append(productName[0].find(\"h3\").text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "25922eaf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#브랜드 \n",
    "productBrandList=[] # 자동차 브랜드 List\n",
    "for i in range(len(productUrlList)):\n",
    "    brandHtml = urlopen(productUrlList[i])\n",
    "    brandBsObject = BeautifulSoup(brandHtml,\"html.parser\")\n",
    "    productBrand = brandBsObject.find(\"a\",{\"class\":\"brand\"}).text\n",
    "    productBrandList.append(productBrand)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f96e6d39",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 출시가 \n",
    "productPriceList=[] # 자동차 출시가 List\n",
    "for i in range(len(productUrlList)):\n",
    "    priceHtml = urlopen(productUrlList[i])\n",
    "    priceBsObject = BeautifulSoup(priceHtml,\"html.parser\")\n",
    "    productPrice = priceBsObject.find_all(\"p\",{\"class\":\"price\"})\n",
    "    try:\n",
    "        productPrice = productPrice[0].find(\"span\",{\"class\":\"cont\"}).text\n",
    "    except:\n",
    "        productPrice=\"가격정보없음\"\n",
    "    productPriceList.append(productPrice)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "db084463",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 엔진 종류 \n",
    "productEngineList=[]\n",
    "for i in range(len(productUrlList)):\n",
    "    engineHtml = urlopen(productUrlList[i])\n",
    "    engineBsObject = BeautifulSoup(engineHtml,\"html.parser\")\n",
    "    productEngine = engineBsObject.find_all(\"dl\",{\"class\":\"detail_lst\"})\n",
    "    productEngineList.append(productEngine[0].find_all(\"dd\")[1].text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9c5e1736",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 이미지 Src\n",
    "productImgSrcList=[]\n",
    "for i in range(len(productUrlList)):\n",
    "    imgSrcHtml = urlopen(productUrlList[i])\n",
    "    imgSrcBsObject = BeautifulSoup(imgSrcHtml,\"html.parser\")\n",
    "    productImgSrc = imgSrcBsObject.find_all(\"div\",{\"class\":\"main_img\"})\n",
    "    productImgSrc = productImgSrc[0].find(\"img\").get(\"src\")\n",
    "    productImgSrcList.append(productImgSrc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7373e9ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 연비\n",
    "productMileageList=[]\n",
    "for i in range(len(productUrlList)):\n",
    "    mileageHtml = urlopen(productUrlList[i])\n",
    "    mileageBsObject = BeautifulSoup(mileageHtml,\"html.parser\")\n",
    "    ProductMileage = mileageBsObject.find(\"dd\",{\"class\":\"en\"}).text\n",
    "    productMileageList.append(ProductMileage)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4f994dcd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>상품명</th>\n",
       "      <th>브랜드명</th>\n",
       "      <th>가격</th>\n",
       "      <th>엔진 종류</th>\n",
       "      <th>이미지 Src</th>\n",
       "      <th>연비</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021 쉐보레 볼트 EV</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>31,995</td>\n",
       "      <td>전기</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20210215_280...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021 쉐보레 볼트 EUV</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>33,995</td>\n",
       "      <td>전기</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20210215_38/...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022 쉐보레 트랙스</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>1,885~2,333</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20210118_62/...</td>\n",
       "      <td>11.4km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022 쉐보레 트레일블레이저</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>1,959~2,853</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20201221_59/...</td>\n",
       "      <td>11.6~12.9km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021 쉐보레 카마로</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>5,450~5,529</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20201026_275...</td>\n",
       "      <td>7.4km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2021 쉐보레 콜로라도</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>3,830~4,649</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20200916_63/...</td>\n",
       "      <td>8.1~8.3km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2022 쉐보레 트레일블레이저</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>1,959~2,853</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20201221_59/...</td>\n",
       "      <td>11.6~12.9km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2021 쉐보레 카마로</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>5,450~5,529</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20201026_275...</td>\n",
       "      <td>7.4km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2021 쉐보레 콜로라도</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>3,830~4,649</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20200916_63/...</td>\n",
       "      <td>8.1~8.3km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2020 쉐보레 트래버스</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>4,520~5,522</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20190903_67/...</td>\n",
       "      <td>8.3km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2021 쉐보레 말리부</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>2,364~3,338</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20201020_269...</td>\n",
       "      <td>10.5~14.2km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2022 쉐보레 트랙스</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>1,885~2,333</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20210118_62/...</td>\n",
       "      <td>11.4km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2021 쉐보레 스파크</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>977~1,493</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20200608_282...</td>\n",
       "      <td>14.4~15.0km/ℓ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2021 쉐보레 트래버스</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>가격정보없음</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20200317_52/...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2020 쉐보레 타호</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>50,295</td>\n",
       "      <td>디젤, 가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20191211_225...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2020 쉐보레 콜벳 스팅레이</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>59,995</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20190719_74/...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2020 쉐보레 이쿼녹스</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>가격정보없음</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20200207_68/...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2020 쉐보레 볼트 EV</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>4,593~4,814</td>\n",
       "      <td>전기</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20200609_71/...</td>\n",
       "      <td>5.4km/kWh</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2020 쉐보레 서버번</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>52,995</td>\n",
       "      <td>디젤, 가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20191211_271...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2021 쉐보레 볼트 EUV</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>33,995</td>\n",
       "      <td>전기</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20210215_38/...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2020 쉐보레 콜벳 컨버터블</td>\n",
       "      <td>쉐보레</td>\n",
       "      <td>66,400</td>\n",
       "      <td>가솔린</td>\n",
       "      <td>https://imgauto-phinf.pstatic.net/20191008_229...</td>\n",
       "      <td>정보없음</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 상품명 브랜드명           가격    엔진 종류  \\\n",
       "0     2021 쉐보레 볼트 EV  쉐보레       31,995       전기   \n",
       "1    2021 쉐보레 볼트 EUV  쉐보레       33,995       전기   \n",
       "2       2022 쉐보레 트랙스  쉐보레  1,885~2,333      가솔린   \n",
       "3   2022 쉐보레 트레일블레이저  쉐보레  1,959~2,853      가솔린   \n",
       "4       2021 쉐보레 카마로  쉐보레  5,450~5,529      가솔린   \n",
       "5      2021 쉐보레 콜로라도  쉐보레  3,830~4,649      가솔린   \n",
       "6   2022 쉐보레 트레일블레이저  쉐보레  1,959~2,853      가솔린   \n",
       "7       2021 쉐보레 카마로  쉐보레  5,450~5,529      가솔린   \n",
       "8      2021 쉐보레 콜로라도  쉐보레  3,830~4,649      가솔린   \n",
       "9      2020 쉐보레 트래버스  쉐보레  4,520~5,522      가솔린   \n",
       "10      2021 쉐보레 말리부  쉐보레  2,364~3,338      가솔린   \n",
       "11      2022 쉐보레 트랙스  쉐보레  1,885~2,333      가솔린   \n",
       "12      2021 쉐보레 스파크  쉐보레    977~1,493      가솔린   \n",
       "13     2021 쉐보레 트래버스  쉐보레       가격정보없음      가솔린   \n",
       "14       2020 쉐보레 타호  쉐보레       50,295  디젤, 가솔린   \n",
       "15  2020 쉐보레 콜벳 스팅레이  쉐보레       59,995      가솔린   \n",
       "16     2020 쉐보레 이쿼녹스  쉐보레       가격정보없음      가솔린   \n",
       "17    2020 쉐보레 볼트 EV  쉐보레  4,593~4,814       전기   \n",
       "18      2020 쉐보레 서버번  쉐보레       52,995  디젤, 가솔린   \n",
       "19   2021 쉐보레 볼트 EUV  쉐보레       33,995       전기   \n",
       "20  2020 쉐보레 콜벳 컨버터블  쉐보레       66,400      가솔린   \n",
       "\n",
       "                                              이미지 Src             연비  \n",
       "0   https://imgauto-phinf.pstatic.net/20210215_280...           정보없음  \n",
       "1   https://imgauto-phinf.pstatic.net/20210215_38/...           정보없음  \n",
       "2   https://imgauto-phinf.pstatic.net/20210118_62/...       11.4km/ℓ  \n",
       "3   https://imgauto-phinf.pstatic.net/20201221_59/...  11.6~12.9km/ℓ  \n",
       "4   https://imgauto-phinf.pstatic.net/20201026_275...        7.4km/ℓ  \n",
       "5   https://imgauto-phinf.pstatic.net/20200916_63/...    8.1~8.3km/ℓ  \n",
       "6   https://imgauto-phinf.pstatic.net/20201221_59/...  11.6~12.9km/ℓ  \n",
       "7   https://imgauto-phinf.pstatic.net/20201026_275...        7.4km/ℓ  \n",
       "8   https://imgauto-phinf.pstatic.net/20200916_63/...    8.1~8.3km/ℓ  \n",
       "9   https://imgauto-phinf.pstatic.net/20190903_67/...        8.3km/ℓ  \n",
       "10  https://imgauto-phinf.pstatic.net/20201020_269...  10.5~14.2km/ℓ  \n",
       "11  https://imgauto-phinf.pstatic.net/20210118_62/...       11.4km/ℓ  \n",
       "12  https://imgauto-phinf.pstatic.net/20200608_282...  14.4~15.0km/ℓ  \n",
       "13  https://imgauto-phinf.pstatic.net/20200317_52/...           정보없음  \n",
       "14  https://imgauto-phinf.pstatic.net/20191211_225...           정보없음  \n",
       "15  https://imgauto-phinf.pstatic.net/20190719_74/...           정보없음  \n",
       "16  https://imgauto-phinf.pstatic.net/20200207_68/...           정보없음  \n",
       "17  https://imgauto-phinf.pstatic.net/20200609_71/...      5.4km/kWh  \n",
       "18  https://imgauto-phinf.pstatic.net/20191211_271...           정보없음  \n",
       "19  https://imgauto-phinf.pstatic.net/20210215_38/...           정보없음  \n",
       "20  https://imgauto-phinf.pstatic.net/20191008_229...           정보없음  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr=[]\n",
    "arr={\n",
    "    \"상품명\":productNameList,\n",
    "    \"브랜드명\":productBrandList,\n",
    "    \"가격\":productPriceList,\n",
    "    \"엔진 종류\":productEngineList,\n",
    "    \"이미지 Src\":productImgSrcList,\n",
    "    \"연비\":productMileageList\n",
    "    \n",
    "}\n",
    "\n",
    "finalList = pd.DataFrame(arr, columns = [\"상품명\",\"브랜드명\",\"가격\",\"엔진 종류\",\"이미지 Src\",\"연비\"])\n",
    "finalList"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5ec7974f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import cx_Oracle\n",
    "import os\n",
    "\n",
    "LOCATION = r\"C:\\instantclient_19_11\"\n",
    "os.environ[\"PATH\"]=LOCATION + \";\"+os.environ[\"PATH\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "01197f28",
   "metadata": {},
   "outputs": [],
   "source": [
    "connect = cx_Oracle.connect(\"HR\",\"1234\",\"localhost\")\n",
    "cursor = connect.cursor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ec77f8e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(len(productNameList)):\n",
    "    sql = \"INSERT INTO carproducts (PRODUCTNAME,PRODUCTID,PRODUCTBRAND,PRODUCTREGDATE,PRODUCTPRICE,PRODUCTENGINE,\\\n",
    "    PRODUCTIMAGESRC,PRODUCTMILEAGE) \\\n",
    "    VALUES('\" + productNameList[i] +\"',productID_INCREMENT.nextval,'\"+ productBrandList[i] +\"',sysdate,'\"+ productPriceList[i] +\"','\"+ productEngineList[i] +\"','\" +productImgSrcList[i]+ \"','\"+ productMileageList[i] +\"'\\\n",
    "    )\"\n",
    "    cursor.execute(sql)\n",
    "cursor.close()\n",
    "connect.commit()\n",
    "connect.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "759a52d0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3c623a3",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
